#! /bin/sh
### BEGIN INIT INFO
# Provides:          skeleton
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Atlassian JIRA
### END INIT INFO

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Atlassian {{ bambooagent_service_name }} {{ bambooagent_version }}"
APP_HOME="{{ bambooagent_agent_root }}"
RUNAS="{{ bambooagent_user }}"
SCRIPTNAME=/etc/init.d/atlassian-{{ bambooagent_service_name }}
LOGFILE="/var/log/{{ bambooagent_service_name }}.log"

[ -d "$APP_HOME" ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

do_start()
{
        # for pointing the cert store
        export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))
        sudo -H -u "$RUNAS" \
            {{ bambooagent_additional_environment | join(" ") }} \
            JAVA_HOME=$JAVA_HOME \
            PATH=$JAVA_HOME/bin:{{ bambooagent_install_root }}/usr/local/bin:$PATH \
            $JAVA_HOME/bin/java {{ bambooagentjava_additional_options | join(" ") }} -jar {{ bambooagent_jar_filename_full_path }} {{ bamboo_server_url }}/agentServer/ >>$LOGFILE 2>&1 </dev/null &
}

do_stop()
{
        # for pointing the cert store
        export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))
        sudo -H -u "$RUNAS" \
            {{ bambooagent_additional_environment | join(" ") }} \
            JAVA_HOME=$JAVA_HOME \
            PATH=$JAVA_HOME/bin:{{ bambooagent_install_root }}/usr/local/bin:$PATH \
            {{ bambooagent_agent_root }}/bin/bamboo-agent.sh stop >>$LOGFILE 2>&1 </dev/null &

        sudo pkill -u $RUNAS ;
}

case "$1" in
  start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC"
        do_start
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC"
        do_stop
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  restart|force-reload)
        log_daemon_msg "Restarting $DESC"
        do_stop
        case "$?" in
          0|1)
                do_start
                case "$?" in
                        0) log_end_msg 0 ;;
                        1) log_end_msg 1 ;; # Old process is still running
                        *) log_end_msg 1 ;; # Failed to start
                esac
                ;;
          *)
                # Failed to stop
                log_end_msg 1
                ;;
        esac
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
        exit 3
        ;;
esac