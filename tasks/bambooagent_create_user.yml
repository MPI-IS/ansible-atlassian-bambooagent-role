# Creates the bamboo agent

- block:
  - name: '[BAMBOOAGENT] Group "{{ bambooagent_group }}"'
    group: name={{ bambooagent_group }} state=present
    when: ansible_os_family!="Windows"

  - name: '[BAMBOOAGENT] Group "{{ bambooagent_group }}"'
    win_group: name={{ bambooagent_group }} state=present
    when: ansible_os_family=="Windows"


# Creates the user / OSX-Ubuntu
- block:
  - getent:
      database: passwd
      key: "{{ bambooagent_user }}"
      split: ':'
    register: check_bambooagent
    when: ansible_distribution=="Ubuntu"
  
  - debug: msg="{{ getent_passwd[bambooagent_user][4] }}"
    when: ansible_distribution=="Ubuntu"
  
  - name: '[BAMBOOAGENT] Creating non existing user "{{ bambooagent_user }}"'
    user:
      name: "{{ bambooagent_user }}"
      comment: "Bamboo agent"
      state: present
      group: "{{ bambooagent_group }}"
      home: "{{ bambooagent_userhome }}"
      createhome: yes
    when: (check_bambooagent|failed) or (ansible_distribution!="Ubuntu")
  
  - name: '[BAMBOOAGENT] Ensuring home of "{{ bambooagent_user }}" exists'
    file:
      path: "{{ bambooagent_userhome }}"
      state: directory
      owner: "{{ bambooagent_user }}"
      group: "{{ bambooagent_group }}"
    when: (check_bambooagent|failed) and (ansible_distribution=="Ubuntu")
  
  - name: '[BAMBOOAGENT] Ensuring home of "{{ bambooagent_user }}" exists (2)'
    file:
      path: "{{ getent_passwd[bambooagent_user][4] }}"
      state: directory
      owner: "{{ bambooagent_user }}"
      group: "{{ bambooagent_group }}"
    when: (check_bambooagent|succeeded) and (ansible_distribution=="Ubuntu")

  when: ansible_os_family!="Windows"

# Creates the user / windows
- block:

  - name: '[BAMBOOAGENT][WIN] create user "{{ bambooagent_user }}"'
    win_user:
      name: "{{ bambooagent_user }}"
      fullname: "Bamboo agent user"
      user_cannot_change_password: yes
      password_never_expires: yes
      state: present
      password: "{{ lookup('password', 'windows/' + inventory_hostname + '/bambooagent length=15') }}"
      groups: 
      - "{{ bambooagent_group }}"
    register: win_bamboo_user_reg

  - name: '[BAMBOOAGENT][WIN] add account to Log on as a service'
    win_user_right:
      name: SeServiceLogonRight
      users:
      - "{{ bambooagent_user }}"
      action: add

  - debug:
      var: win_bamboo_user_reg
      
  - name: '[BAMBOOAGENT][WIN] create user "{{ bambooagent_user }}" home'
    win_file:
      path: "{{ bambooagent_userhome }}"
      state: directory

  # for the current user only
  #- name: '[BAMBOOAGENT][WIN] adding TEMP'
  #  win_environment:
  #    state: present
  #    name: TEMP
  #    value: '{{ bambooagent_userhome }}/tmp-bamboo'
  #    level: user

  when: ansible_os_family=="Windows"
  
#
# hides the bamboo agent from the login screen
#

- name: Hides the user from the login screen OSX
  command: defaults write /Library/Preferences/com.apple.loginwindow HiddenUsersList -array-add "{{ bambooagent_user }}"
  when: ansible_distribution=="MacOSX"

- name: Creates the login hidding file
  file:
    path: "/var/lib/AccountsService/users/{{ bambooagent_user }}"
    state: touch
    owner: root
    group: root
    mode: "u+rw,g+r,o+r"
  when: ansible_distribution=="Ubuntu"

- name: Hides the user from the login screen Ubuntu
  ini_file:
    dest=/var/lib/AccountsService/users/{{ bambooagent_user }}
    section=User
    option=SystemAccount
    value=true
    backup=yes
  when: ansible_distribution=="Ubuntu"


#
# do not let the Bamboo agent to modify its home folder
#
- name: "Prevents the bamboo agent to modify its home folder"
  file:
    path: "{{ bambooagent_userhome }}"
    state: directory
    owner: "{{ bambooagent_user }}"
    group: "{{ bambooagent_group }}"
    mode: "u+rx,g+rx"
  when: ((check_bambooagent|failed) or (ansible_distribution!="Ubuntu")) and False

- name: "Prevents the bamboo agent to modify its home folder 2"
  file:
    path: "{{ getent_passwd[bambooagent_user][4] }}"
    state: directory
    owner: "{{ bambooagent_user }}"
    group: "{{ bambooagent_group }}"
    mode: "u+rx,g+rx"
  when: ((check_bambooagent|succeeded) and (ansible_distribution=="Ubuntu")) and False
