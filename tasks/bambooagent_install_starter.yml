# Installs the startup procedure for the bambooagent

# Copies the .jar
- name: '[BAMBOO] Copy bamboo jar into destination from existing file'
  copy:
    src: "{{ bamboo_java_jar_file }}"
    dest: "{{ bambooagent_install_root }}/{{ bamboo_java_jar_file | basename }}"
  when: 
  - (bamboo_java_jar_file | default()) != ''
  - ansible_os_family!="Windows"

- name: '[BAMBOO][WIN] Copy bamboo jar into destination from existing file'
  win_copy:
    src: "{{ bamboo_java_jar_file }}"
    dest: "{{ bambooagent_install_root }}/{{ bamboo_java_jar_file | basename }}"
  when: 
  - (bamboo_java_jar_file | default()) != ''
  - ansible_os_family=="Windows"

# Fetches the .jar
- name: '[BAMBOO] Copy bamboo jar into destination from server'
  get_url:
    url: "{{ bamboo_server_url }}/agentServer/agentInstaller/{{ bamboo_java_jar_file | basename }}"
    dest: "{{ bambooagent_install_root }}/{{ bamboo_java_jar_file | basename }}"
    validate_certs: True
  when: 
  - (bamboo_java_jar_file | default()) == ''
  - ansible_os_family!="Windows"

- name: '[BAMBOO][WIN] Copy bamboo jar into destination from server'
  win_get_url:
    url: "{{ bamboo_server_url }}/agentServer/agentInstaller/{{ bamboo_java_jar_file | basename }}"
    dest: "{{ bambooagent_install_root }}/{{ bamboo_java_jar_file | basename }}"
    validate_certs: True
  when: 
  - (bamboo_java_jar_file | default()) == ''
  - ansible_os_family=="Windows"


#
# Ubuntu startup configuration

# for init.d / ubuntu <= 14.04
- block:
  - name: Installing the init.d startup
    template:
      src: "ubuntu/etc/init.d/atlassian-bambooagent.j2"
      dest: "/etc/init.d/atlassian-{{ bambooagent_service_name }}"
      owner: root
      group: root
      mode: 0755

  - name: Creating the log file
    file:
      path: "/var/log/{{ bambooagent_service_name }}.log"
      state: touch
      owner: root

    notify:
      - register init.d
      - restart bambooagent

  when: ansible_distribution=='Ubuntu' and ansible_service_mgr!="systemd"

  rescue:
    - debug:
        msg: "Error caught during the installation of the bamboo startup"
    - file:
        path: "/etc/init.d/atlassian-{{ bambooagent_service_name }}"
        state: absent
    - command: /bin/false

# for systemd ubuntu>=16.04
- block:
  - name: Installing the systemd config
    template:
      src: "ubuntu/etc/systemd/system/atlassian-bambooagent.service.j2"
      dest: "/etc/systemd/system/atlassian-{{ bambooagent_service_name }}.service"
      owner: root
      group: root
      mode: 0644
  
  # startup script is referenced by the systemd service
  - name: Installing the startup script
    template:
      src: "ubuntu/bamboo-startup.sh.j2"
      dest: "{{ bambooagent_install_root}}/bamboo-startup.sh"
      owner: "{{ bambooagent_user }}"
      group: "{{ bambooagent_group }}"
      mode: 0755

    notify:
      - register systemd
      - restart bambooagent

  when: ansible_distribution=='Ubuntu' and ansible_service_mgr=="systemd"

  rescue:
    - debug:
        msg: "Error caught during the installation of the bamboo startup"
    - file:
        path: "/etc/systemd/system/atlassian-{{ bambooagent_service_name }}.service"
        state: absent
    - file:
        path: "{{ bambooagent_install_root}}/bamboo-startup.sh"
        state: absent
    - command: /bin/false

#
# OSX startup configuration

- block:
  - name: Installing the plist
    template:
      src: "osx/Library/LaunchDaemons/com.atlassian.bambooagent.plist.j2"
      dest: "/Library/LaunchDaemons/com.atlassian.{{ bambooagent_service_name }}.plist"
      owner: root
      group: admin
      mode: 0644

  - name: Installing the startup script
    template:
      src: "osx/bamboo.sh.j2"
      dest: "{{ bambooagent_install_root }}/bamboo.sh"
      owner: "{{ bambooagent_user }}"
      group: "{{ bambooagent_group }}"
      mode: 0755

    notify:
      - restart bambooagent

  when: ansible_distribution=="MacOSX"

  rescue:
    - debug: msg='Error caught during the installation of the bamboo startup'
    - file: 
        path: "/Library/LaunchDaemons/com.atlassian.{{ bambooagent_service_name }}.plist" 
        state: absent
    - file: 
        path: "{{ bambooagent_install_root }}/bamboo.sh" 
        state: absent
    - command: /bin/false

#
# Windows startup configuration

- block:
  - name: "[BAMBOO][WIN] stopping previous service 'bamboo-remote-agent'"
    win_service:
      name: bamboo-remote-agent
      state: stopped
    ignore_errors: True

  - name: "[BAMBOO][WIN] removing previous service 'bamboo-remote-agent'"
    win_service:
      name: bamboo-remote-agent
      state: absent

  - name: "[BAMBOO][WIN] installing the service"
    win_command: "java -Djava.io.tmpdir=\"{{ bambooagent_agent_root }}/tmpdir\" -Dbamboo.home=\"{{ bambooagent_agent_root }}\" -jar {{ bambooagent_install_root }}/{{ bamboo_java_jar_file | basename }} {{ bamboo_server_url }}/agentServer/ installntservice"
    notify:
      - restart bambooagent

  - name: "[BAMBOO][WIN] fixing build folder permissions"
    win_acl:
      path: "{{ bambooagent_agent_root }}"
      user: "{{ bambooagent_user }}"
      rights: FullControl
      type: allow
      state: present

  - name: "[BAMBOO][WIN] configuring the service 'bamboo-remote-agent'"
    win_service:
      name: bamboo-remote-agent
      start_mode: auto
      username: ".\\{{ bambooagent_user }}"
      password: "{{ lookup('password', 'windows/' + inventory_hostname + '/bambooagent length=15') }}"

  when: ansible_os_family=="Windows"

  rescue:
    - debug: msg='Error caught during the installation of the bamboo startup'
    - win_command: "/bin/false"